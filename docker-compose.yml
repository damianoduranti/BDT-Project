version: "3.9"

services:

  kafka-ui: 
    container_name: kafka-ui 
    image: provectuslabs/kafka-ui:latest 
    ports: 
      - 8080:8080 
    depends_on: 
      - zookeeper
      - kafka
    environment: 
      KAFKA_CLUSTERS_0_NAME: local 
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092 
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181 
      KAFKA_CLUSTERS_0_JMXPORT: 9997 

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    expose:
      - "9092"
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  producer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      SCRIPT: src/producer.py
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: btc
      KAFKA_INTERVAL: 0.5

  consumer:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "4040:4040"
    depends_on: 
      - zookeeper
      - kafka
      - producer
    environment:
      SCRIPT: src/consumer.py
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: btc
      KAFKA_CONSUMER_GROUP: consumer
      TZ: Europe/Amsterdam
    volumes:
      - /etc/localtime:/etc/localtime

  dashboard:
    build: 
      context: .
      dockerfile: src/dashboard/Dockerfile
    volumes:
      - /src/dashboard
    depends_on: 
      - consumer
    environment:
      SCRIPT: src/dashboard/dashboard.py
    ports:
      - 8501:8501
    
 model_fit:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - consumer
      - producer
    environment:
      SCRIPT: src/model_fit.py
